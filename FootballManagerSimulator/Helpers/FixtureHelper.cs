using FootballManagerSimulator.Interfaces;
using FootballManagerSimulator.Structures;

namespace FootballManagerSimulator.Helpers;

public class FixtureHelper : IFixtureHelper
{
    private readonly IHelperFunction HelperFunction;

    public FixtureHelper(IHelperFunction helperFunction)
    {
        HelperFunction = helperFunction;
    }

    //Generated by Chat GPT
    public List<Fixture> GenerateFixtures(List<Team> teams)
    {
        var output = new List<Fixture>();

        int numRounds = teams.Count - 1;
        int halfSize = teams.Count / 2;

        var teamIndices = new List<Team>(teams);

        teamIndices.RemoveAt(0);

        var teamIdxSize = teamIndices.Count;

        var date = new DateOnly(2022, 07, 02);

        for (int round = 0; round < numRounds; round++)
        {
            int teamIdx = round % teamIdxSize;

            output.Add(new Fixture
            {
                HomeTeam = HelperFunction.GetTeam(teams[0].ID),
                AwayTeam = HelperFunction.GetTeam(teamIndices[teamIdx].ID),
                WeekNumber = round + 1,
                Date = date
            });

            for (int idx = 1; idx < halfSize; idx++)
            {
                int firstTeamIdx = (round + idx) % teamIdxSize;
                int secondTeamIdx = (round + teamIdxSize - idx) % teamIdxSize;

                output.Add(new Fixture
                {
                    HomeTeam = HelperFunction.GetTeam(teamIndices[firstTeamIdx].ID),
                    AwayTeam = HelperFunction.GetTeam(teamIndices[secondTeamIdx].ID),
                    WeekNumber = round + 1,
                    Date = date
                });
            }

            date = date.AddDays(7);
        }

        return output;
    }

}
